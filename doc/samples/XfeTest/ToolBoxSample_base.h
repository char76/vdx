/*
 * All files in this project are distributed under the GNU General
 * Public License. This is Free Software.
 */
// -----------------------------------------------------
// ToolBoxSample_base.h
// 
// This file was automaticly generated by
// View Designer/X v1.2
//
// User: lazy@apfel
// Date: Thu Apr 23 03:41:00 1998
// 
// Don't edit this file, please !
// -----------------------------------------------------

#ifndef _ToolBoxSample_base_H_
#define _ToolBoxSample_base_H_

#include <X11/Intrinsic.h>
#include "VcView.h"



// -----------------------------------------------------
// Class definition 
// class ToolBoxSample_base is a derived class of VcView
// -----------------------------------------------------

class ToolBoxSample_base : public VcView {
private:
  void createWidgets();
  void addRelations();
  void addCallbacks();

protected:
  Widget ToolBoxSample;
  Widget mainWindow_1;      /* XmMainWindow */
  Widget menuBar_1;      /* XmCreateMenuBar */
  Widget File;      /* XmCascadeButton */
  Widget pulldownMenu;      /* XmCreatePulldownMenu */
  Widget Exit;      /* XmPushButton */
  Widget form;      /* XmForm */
  Widget toolBox;      /* XfeToolBox */
  Widget xfeToolBar;      /* XfeToolBar */
  Widget xfeButton;      /* XfeButton */
  Widget xfeButton_3;      /* XfeButton */
  Widget xfeToolBar_1;      /* XfeToolBar */
  Widget xfeButton_3_1;      /* XfeButton */
  Widget xfeButton_3_2;      /* XfeButton */
  Widget text;      /* XmText */
  Widget progress;      /* XfeProgressBar */


  static void do_exit_CB(Widget,XtPointer,XtPointer);
  static void run_CB(Widget,XtPointer,XtPointer);
  static void stop_CB(Widget,XtPointer,XtPointer);
  static void lowSpeed_CB(Widget,XtPointer,XtPointer);
  static void highSpeed_CB(Widget,XtPointer,XtPointer);



  // override the following methods in class ToolBoxSample

  virtual void do_exit(Widget,XtPointer) = 0;
  virtual void run(Widget,XtPointer) = 0;
  virtual void stop(Widget,XtPointer) = 0;
  virtual void lowSpeed(Widget,XtPointer) = 0;
  virtual void highSpeed(Widget,XtPointer) = 0;


public:
  ToolBoxSample_base(Widget parent = NULL, ArgList args = NULL, Cardinal n = 0);

  Widget getTop() { return ToolBoxSample; }
  Pixmap createPixmapFromData(char **data);
  Pixmap createPixmapFromFile(char *filename);
  static void manageWidget(Widget wg, XtPointer c, XtPointer call);
};

#endif /* Don't add stuff after this #endif */






